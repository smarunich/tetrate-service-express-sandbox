#!/usr/bin/env bash
set -e


export ZONE_NAME_PREFIX="${cluster_name}"

echo 'Destroying Hosted zones...'
zone_ids=$(aws route53 list-hosted-zones --query "HostedZones[?starts_with(Name, '$ZONE_NAME_PREFIX')].Id" --output text)

if [ -z "$zone_ids" ]; then
  echo "No hosted zones found with name starting with $ZONE_NAME_PREFIX"
else
  echo "Deleting DNS records within hosted zones with names starting with $ZONE_NAME_PREFIX:"
  for zone_id in $zone_ids
  do
    zone_name=$(aws route53 get-hosted-zone --id $zone_id --query "HostedZone.Name" --output text)
    echo "Deleting DNS records in hosted zone with ID $zone_id and name $zone_name"

    record_sets=$(aws route53 list-resource-record-sets --hosted-zone-id $zone_id --query "ResourceRecordSets[?Type != 'NS' && Type != 'SOA']")
    record_sets_count=$(echo $record_sets | jq length)

    if [ "$record_sets_count" -eq 0 ]; then
      echo "No DNS records found in hosted zone with ID $zone_id"
    else
      for i in $(seq 0 $(($record_sets_count-1)))
      do
        record_set=$(echo $record_sets | jq --arg i "$i" '.['"$i"']')
        aws route53 change-resource-record-sets --hosted-zone-id $zone_id --change-batch "{\"Changes\": [{ \"Action\": \"DELETE\", \"ResourceRecordSet\": $record_set }]}"
        echo "Deleted DNS record $i in hosted zone with ID $zone_id and name $zone_name"
      done
    fi

    aws route53 delete-hosted-zone --id $zone_id
    echo "Deleted hosted zone with ID $zone_id and name $zone_name"
  done
fi